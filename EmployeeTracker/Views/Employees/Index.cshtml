@model PagedList.IPagedList<EmployeeTracker.Models.Employee>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Employees";
}

<h2>Employees</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!-- form with autocomplete and Ajax search, handled in et.js -->
<form method="get" action="@Url.Action("Index")"
      data-et-ajax="true" data-et-target="#employeeList">
    <input type="search" name="searchString" data-et-autocomplete="@Url.Action("AutoComplete")" />
    <input type="submit" value="Search" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Department", "Index", new { sortOrder = ViewBag.DepartmentSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Job Title", "Index", new { sortOrder = ViewBag.JobTitleSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Manager", "Index", new { sortOrder = ViewBag.ManagerSortParam, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Email
            </th>
            <th>
                Phone
            </th>
            <th></th>
        </tr>
    </thead>

    <!-- render list of employees -->
        @Html.Partial("EmployeeList", Model)
 
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))